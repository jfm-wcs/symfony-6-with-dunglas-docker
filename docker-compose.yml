version: "3.4"

services:
  php:
    container_name: ${PROJECT_NAME:-project}-php
    build:
      context: .
      target: app_php
      args:
        SYMFONY_VERSION: ${SYMFONY_VERSION:-}
        STABILITY: ${STABILITY:-stable}
    depends_on:
      - database
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    networks:
      - default
    environment:
      # Run "composer require symfony/orm-pack" to install and configure Doctrine ORM
      DATABASE_URL: mysql://app:!ChangeMe!@database:3306/app?serverVersion=8&charset=utf8mb4
      # Run "composer require symfony/mercure-bundle" to install and configure the Mercure integration
      MERCURE_URL: ${CADDY_MERCURE_URL:-http://caddy/.well-known/mercure}
      MERCURE_PUBLIC_URL: https://${SERVER_NAME:-localhost}/.well-known/mercure
      MERCURE_JWT_SECRET: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
  
  caddy:
    container_name: ${PROJECT_NAME:-project}-caddy
    build:
      context: .
      target: app_caddy
    depends_on:
      - php
    environment:
      SERVER_NAME: ${SERVER_NAME:-localhost, caddy:80}
      MERCURE_PUBLISHER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
      MERCURE_SUBSCRIBER_JWT_KEY: ${CADDY_MERCURE_JWT_SECRET:-!ChangeThisMercureHubJWTSecretKey!}
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - proxy
      - default
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.${PROJECT_NAME:-project}-secure.entrypoints=websecure"
      - "traefik.http.routers.${PROJECT_NAME:-project}-secure.rule=Host(`${PROJECT_NAME:-project}.${DOMAIN}`)"
#      - "traefik.http.routers.${PROJECT_NAME:-project}-secure.service=${PROJECT_NAME:-project}-secure-service"
#      - "traefik.http.services.${PROJECT_NAME:-project}-service.loadbalancer.server.port=80"
#    ports:
#      # HTTP
#      - target: 80
#        published: ${HTTP_PORT:-80}
#        protocol: tcp
#      # HTTPS
#      - target: 443
#        published: ${HTTPS_PORT:-443}
#        protocol: tcp
#      # HTTP/3
#      - target: 443
#        published: ${HTTP3_PORT:-443}
#        protocol: udp

# Mercure is installed as a Caddy module, prevent the Flex recipe from installing another service
###> symfony/mercure-bundle ###
###< symfony/mercure-bundle ###

###> doctrine/doctrine-bundle ###
  database:
    container_name: ${PROJECT_NAME:-project}-db
    build: ./docker/mysql
    restart: always
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE:-app}
      # So you don't have to use root, but you can if you like
      MYSQL_USER: ${MYSQL_USER:-app}
      # You can use whatever password you like
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-!ChangeMe!}
      # Password for root access
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD:-!ChangeMe!}
#    ports:
#      # <Port exposed> : < MySQL Port running inside container>
#      - '3306:3306'
    networks:
      - default
    expose:
      # Opens port 3306 on the container
      - 3306
      # Where our data will be persisted
#    volumes:
#      - my-db:/var/lib/mysql
#    volumes:
#      - database_data:/etc/mysql/conf.d
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
  php_socket:
    name: ${PROJECT_NAME:-project}-php_socket
  caddy_data:
    name: ${PROJECT_NAME:-project}-caddy_data
  caddy_config:
    name: ${PROJECT_NAME:-project}-caddy_config
###> symfony/mercure-bundle ###
###< symfony/mercure-bundle ###
networks:
  proxy:
    external: true

###> doctrine/doctrine-bundle ###
  my-db:
###< doctrine/doctrine-bundle ###
